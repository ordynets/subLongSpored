y=Lmean)) +
geom_point(size=5, shape=21, fill = NA, aes(x=factor(perl_clade, level=c("clade 1", "clade 2")),
y=Lmean, color=perl_clade))+
geom_boxplot(fill = NA, outlier.size = 7, outlier.shape=21, aes(x=factor(perl_clade, level=c("clade 1", "clade 2")),
y=Lmean, color=perl_clade))+
labs(y="Mean length of cystidia, N<m", x="Clade of Subulicystidium perlongisporum")+
theme(plot.title = element_text(hjust = 0.5, size=20, face="bold"),
axis.title.x = element_text(size=14, face="bold", vjust=0.5),
axis.title.y = element_text(size=14, face="bold", vjust=2.2),
axis.text.x=element_text(colour="grey40", size=15),
axis.text.y=element_text(colour="grey40", size=15))+
theme(legend.position = "none")
bp
bp <- ggplot(ranges.cys.perl, aes(x=factor(perl_clade, level=c("clade 1", "clade 2")),
y=Lmean)) +
geom_point(size=5, shape=21, fill = NA, aes(x=factor(perl_clade, level=c("clade 1", "clade 2")),
y=Lmean, color=perl_clade))+
geom_boxplot(fill = NA, outlier.size = 4, outlier.shape=1, aes(x=factor(perl_clade, level=c("clade 1", "clade 2")),
y=Lmean, color=perl_clade))+
labs(y="Mean length of cystidia, N<m", x="Clade of Subulicystidium perlongisporum")+
theme(plot.title = element_text(hjust = 0.5, size=20, face="bold"),
axis.title.x = element_text(size=14, face="bold", vjust=0.5),
axis.title.y = element_text(size=14, face="bold", vjust=2.2),
axis.text.x=element_text(colour="grey40", size=15),
axis.text.y=element_text(colour="grey40", size=15))+
theme(legend.position = "none")
bp
bp <- ggplot(ranges.cys.perl, aes(x=factor(perl_clade, level=c("clade 1", "clade 2")),
y=Lmean)) +
geom_point(size=5, shape=21, fill = NA, aes(x=factor(perl_clade, level=c("clade 1", "clade 2")),
y=Lmean, color=perl_clade))+
geom_boxplot(outlier.size = 2, outlier.shape=1, aes(x=factor(perl_clade, level=c("clade 1", "clade 2")),
y=Lmean, color=perl_clade))+
labs(y="Mean length of cystidia, N<m", x="Clade of Subulicystidium perlongisporum")+
theme(plot.title = element_text(hjust = 0.5, size=20, face="bold"),
axis.title.x = element_text(size=14, face="bold", vjust=0.5),
axis.title.y = element_text(size=14, face="bold", vjust=2.2),
axis.text.x=element_text(colour="grey40", size=15),
axis.text.y=element_text(colour="grey40", size=15))+
theme(legend.position = "none")
bp
bp <- ggplot(ranges.cys.perl, aes(x=factor(perl_clade, level=c("clade 1", "clade 2")),
y=Lmean)) +
geom_point(size=5, shape=21, fill = NA, aes(x=factor(perl_clade, level=c("clade 1", "clade 2")),
y=Lmean, color=perl_clade))+
geom_boxplot(fill = NA, outlier.size = 1, outlier.shape=1, aes(x=factor(perl_clade, level=c("clade 1", "clade 2")),
y=Lmean, color=perl_clade))+
labs(y="Mean length of cystidia, N<m", x="Clade of Subulicystidium perlongisporum")+
theme(plot.title = element_text(hjust = 0.5, size=20, face="bold"),
axis.title.x = element_text(size=14, face="bold", vjust=0.5),
axis.title.y = element_text(size=14, face="bold", vjust=2.2),
axis.text.x=element_text(colour="grey40", size=15),
axis.text.y=element_text(colour="grey40", size=15))+
theme(legend.position = "none")
bp
bp <- ggplot(ranges.cys.perl, aes(x=factor(perl_clade, level=c("clade 1", "clade 2")),
y=Lmean)) +
geom_point(size=5, shape=21, fill = NA, aes(x=factor(perl_clade, level=c("clade 1", "clade 2")),
y=Lmean, color=perl_clade))+
geom_boxplot(fill = NA, outlier.size = 1, outlier.shape=1, stroke=2, aes(x=factor(perl_clade, level=c("clade 1", "clade 2")),
y=Lmean, color=perl_clade))+
labs(y="Mean length of cystidia, N<m", x="Clade of Subulicystidium perlongisporum")+
theme(plot.title = element_text(hjust = 0.5, size=20, face="bold"),
axis.title.x = element_text(size=14, face="bold", vjust=0.5),
axis.title.y = element_text(size=14, face="bold", vjust=2.2),
axis.text.x=element_text(colour="grey40", size=15),
axis.text.y=element_text(colour="grey40", size=15))+
theme(legend.position = "none")
bp
bp <- ggplot(ranges.cys.perl, aes(x=factor(perl_clade, level=c("clade 1", "clade 2")),
y=Lmean)) +
geom_point(size=5, shape=21, fill = NA, aes(x=factor(perl_clade, level=c("clade 1", "clade 2")),
y=Lmean, color=perl_clade))+
geom_boxplot(fill = NA, outlier.size = 1, outlier.shape=19, aes(x=factor(perl_clade, level=c("clade 1", "clade 2")),
y=Lmean, color=perl_clade))+
labs(y="Mean length of cystidia, N<m", x="Clade of Subulicystidium perlongisporum")+
theme(plot.title = element_text(hjust = 0.5, size=20, face="bold"),
axis.title.x = element_text(size=14, face="bold", vjust=0.5),
axis.title.y = element_text(size=14, face="bold", vjust=2.2),
axis.text.x=element_text(colour="grey40", size=15),
axis.text.y=element_text(colour="grey40", size=15))+
theme(legend.position = "none")
bp
bp <- ggplot(ranges.cys.perl, aes(x=factor(perl_clade, level=c("clade 1", "clade 2")),
y=Lmean)) +
geom_point(size=5, shape=21, fill = NA, aes(x=factor(perl_clade, level=c("clade 1", "clade 2")),
y=Lmean, color=perl_clade))+
geom_boxplot(fill = NA, outlier.size = 1, outlier.shape=19, aes(x=factor(perl_clade, level=c("clade 1", "clade 2")),
y=Lmean, color=perl_clade))+
labs(y="Mean length of cystidia, mkm", x="Clade of Subulicystidium perlongisporum")+
theme(plot.title = element_text(hjust = 0.5, size=20, face="bold"),
axis.title.x = element_text(size=14, face="bold", vjust=0.5),
axis.title.y = element_text(size=14, face="bold", vjust=2.2),
axis.text.x=element_text(colour="grey40", size=15),
axis.text.y=element_text(colour="grey40", size=15))+
theme(legend.position = "none")
bp
bp <- ggplot(ranges.cys.perl, aes(x=factor(perl_clade, level=c("clade 1", "clade 2")),
y=Lmean)) +
geom_point(size=5, shape=21, fill = NA, aes(x=factor(perl_clade, level=c("clade 1", "clade 2")),
y=Lmean, color=perl_clade))+
geom_boxplot(fill = NA, outlier.size = 1, outlier.shape=19, aes(x=factor(perl_clade, level=c("clade 1", "clade 2")),
y=Lmean, color=perl_clade))+
labs(y="Mean length of cystidia, mkm", x="Clade of Subulicystidium perlongisporum")+
theme(plot.title = element_text(hjust = 0.5, size=20, face="bold"),
axis.title.x = element_text(size=14, face="bold", vjust=0.5),
axis.title.y = element_text(size=14, face="bold", vjust=2.2),
axis.text.x=element_text(colour="grey40", size=15),
axis.text.y=element_text(colour="grey40", size=15))+
theme(legend.position = "none")
bp
# End
# Load required packages
library(here)
library(ape)
library(ggtree)
library(ggstance)
library(Hmisc)
library(gdata) # messages on absent perl interpreter can be ignored
library(treeio)
# Set the current directory as working directory
set_here()
# Set the current directory as working directory
set_here()
setwd("~/Projects/subLongSpored/Analyses/v20200321/subLongSpored/morpho_cystidia_3species")
# Set the current directory as working directory
set_here()
getwd()
setwd("~/Projects/subLongSpored/Analyses/v20200321/subLongSpored/phylo_subPerl_facetplots")
# Set the current directory as working directory
set_here()
source("https://bioconductor.org/biocLite.R")
biocLite("BiocUpgrade") ## you may need this
biocLite("treeio")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.10")
library(treeio)
BiocManager::install(c("treeio"))
library(Rcpp)
remove.packages("Rcpp", lib="~/R/win-library/3.6")
BiocManager::install(c("treeio"))
library(treeio)
# Set the current directory as working directory
set_here()
#Load tree
tree.unr <- read.tree("perl_its_PhyML_newick_tree.nhx")
#to check the tree struture use
#str(tree)
outgroup <- c("Ordynets_00158", "TU_124387",
"TU_124388", "ARAN_4160", "KAS_L_0103")
tree <-root(tree.unr, outgroup)
annot.full <- read.csv ("SUB_spore_measurements_20190808_v2.csv",  sep=",")
annot.perl1 <- annot.full[which(annot.full$Species_ID=="perlongisporum"), ]
annot.perl <- annot.perl1[c("Specimen_ID", "L_sp", "W_sp", "Q_sp")]
# Generate treedata object
p0<-ggtree(tree)
library(ggtree)
BiocManager::install(c("ggtree"))
library(ggtree)
library(treeio)
library(here)
library(ape)
library(ggtree)
library(ggstance)
library(Hmisc)
library(gdata) # messages on absent perl interpreter can be ignored
library(treeio)
# Set the current directory as working directory
set_here()
#Load tree
tree.unr <- read.tree("perl_its_PhyML_newick_tree.nhx")
str(tree)
str(tree.unr)
outgroup <- c("Ordynets_00158", "TU_124387",
"TU_124388", "ARAN_4160", "KAS_L_0103")
tree <-root(tree.unr, outgroup)
annot.full <- read.csv ("SUB_spore_measurements_20190808_v2.csv",  sep=",")
annot.perl1 <- annot.full[which(annot.full$Species_ID=="perlongisporum"), ]
annot.perl <- annot.perl1[c("Specimen_ID", "L_sp", "W_sp", "Q_sp")]
# Generate treedata object
p0<-ggtree(tree)
p1 <- p0 +
geom_tree(size=0.7) +
geom_tiplab(size=2.5, align=F, hjust=-0.01)
p2<- facet_plot(p1+xlim_tree(0.25), panel='Spore length, 5m', data=annot.perl,
geom=geom_boxploth, mapping = aes(x=L_sp, group=label))
p3<- facet_plot(p2, panel='Spore width, 5m', data=annot.perl,
geom=geom_boxploth, mapping = aes(x=W_sp, group=label))
p4<- facet_plot(p3, panel='Spore length/width ratio', data=annot.perl,
geom=geom_boxploth, mapping = aes(x=Q_sp, group=label)) +
theme_tree2()
print(p4)
p2<- facet_plot(p1+xlim_tree(0.25), panel='Spore length, mkm', data=annot.perl,
geom=geom_boxploth, mapping = aes(x=L_sp, group=label))
p3<- facet_plot(p2, panel='Spore width, mkm', data=annot.perl,
geom=geom_boxploth, mapping = aes(x=W_sp, group=label))
p4<- facet_plot(p3, panel='Spore length/width ratio', data=annot.perl,
geom=geom_boxploth, mapping = aes(x=Q_sp, group=label)) +
theme_tree2()
print(p4)
library(here)
library(ape)
library(ggtree)
library(ggstance)
library(Hmisc)
library(gdata) # messages on absent perl interpreter can be ignored
library(treeio)
# Set the current directory as working directory
set_here()
#Load tree
tree.unr <- read.tree("perl its PhyML_newick_tree.nhx")
#to check the tree struture use
#str(tree)
#Rooting and adjusting tip order
outgroup <- c("Ordynets_00158", "TU_124387",
"TU_124388", "ARAN_4160", "KAS_L_0103")
tree <-root(tree.unr, outgroup)
str(tree.unr)
tree.unr <- read.tree("perl_its_PhyML_newick_tree.nhx")
#to check the tree struture use
#str(tree.unr)
outgroup <- c("Ordynets_00158", "TU_124387",
"TU_124388", "ARAN_4160", "KAS_L_0103")
tree <-root(tree.unr, outgroup)
annot.full <- read.csv ("SUB_cystidia_measurements_20190808_v1.2.csv",  sep=",")
annot.perl1 <- annot.full[which(annot.full$Species_ID=="perlongisporum"), ]
annot.perl <- annot.perl1[c("Specimen_ID", "L_sp", "W_sp", "Q_sp")]
# Generate treedata object
p0<-ggtree(tree)
p1 <- p0 +
geom_tree(size=0.7) +
geom_tiplab(size=2.5, align=F, hjust=-0.01)
p2<- facet_plot(p1+xlim_tree(0.25), panel='Cystidia length, mkm', data=annot.perl,
geom=geom_boxploth, mapping = aes(x=L_sp, group=label))
p3<- facet_plot(p2, panel='Cystidia width, mkm', data=annot.perl,
geom=geom_boxploth, mapping = aes(x=W_sp, group=label))
p4<- facet_plot(p3, panel='Cystidia length/width ratio', data=annot.perl,
geom=geom_boxploth, mapping = aes(x=Q_sp, group=label)) +
theme_tree2()
print(p4)
annot.full <- read.csv ("SUB_data_processing_20190731.csv",  sep=",")
# Set the current directory as working directory
set_here()
setwd("~/Projects/subLongSpored/Analyses/v20200321/subLongSpored/phylo_subPerl_with_ali")
# Set the current directory as working directory
set_here()
annot.full <- read.csv ("SUB_data_processing_20190731.csv",  sep=",")
annot.full <- read.csv ("SUB_data_processing_20190731.ods",  sep=",")
annot.full <- read.csv ("SUB_data_processing_20190731.csv",  sep=",")
View(annot.full)
#Load tree
tree.unr <- read.newick("perl_its_PhyML_newick_tree.nhx")
#to check the tree struture use
str(tree.unr)
outgroup <- c("Ordynets_00158", "TU_124387",
"TU_124388", "ARAN_4160", "KAS_L_0103")
tree <-root(tree.unr, outgroup)
ml.tip.lab<-tree$tip.label
annot.filter.ml <- annot.full[which(annot.full$Specimen_ID %in% ml.tip.lab), ]
annot.filter.ml <- drop.levels(annot.filter.ml) # drop unused, "ghost" levels
# Ordering species labels by the order of sequences in alignment/distance matrix
annot.match.ml <- annot.filter.ml[match(ml.tip.lab, annot.filter.ml$Specimen_ID),]
# Check that labels in tree and in table annot.match are
# the same and in the same order
identical(tree$tip.label, annot.match.ml$Specimen_ID)
tree$tip.label
annot.match.ml$Specimen_ID
annot.full <- read.csv ("SUB_data_processing_20190731.csv",  sep="/t")
annot.full <- read.csv ("SUB_data_processing_20190731.csv",  sep="\t")
View(annot.full)
#Load tree
tree.unr <- read.newick("perl_its_PhyML_newick_tree.nhx")
#to check the tree struture use
str(tree.unr)
#Rooting and adjusting tip order
outgroup <- c("Ordynets_00158", "TU_124387",
"TU_124388", "ARAN_4160", "KAS_L_0103")
tree <-root(tree.unr, outgroup)
# First, sample from big annotation table the rows that correspond to the tips
# in the given tree
ml.tip.lab<-tree$tip.label
annot.filter.ml <- annot.full[which(annot.full$Specimen_ID %in% ml.tip.lab), ]
annot.filter.ml <- drop.levels(annot.filter.ml) # drop unused, "ghost" levels
# Ordering species labels by the order of sequences in alignment/distance matrix
annot.match.ml <- annot.filter.ml[match(ml.tip.lab, annot.filter.ml$Specimen_ID),]
# Check that labels in tree and in table annot.match are
# the same and in the same order
identical(tree$tip.label, annot.match.ml$Specimen_ID)
tree$tip.label
annot.match.ml$Specimen_ID
annot.match.ml$ITS_tip_labels
as.character(annot.match.ml$ITS_tip_labels)
# Check that labels in tree and in table annot.match are
# the same and in the same order
identical(tree$tip.label, as.character(annot.match.ml$Specimen_ID))
#Replace original tip labels in the tree by the ones needed for publication
tree$tip.label<-as.character(annot.match.ml$ITS_tip_labels)
library(ape)
#its alignment upload
its<-read.dna("perl_ITS_27x_20190725_mafft_ITSx.phy") #import multiple sequence alignment
its.lab<-rownames(its)
its.annot.filter = annot.full[which(annot.full$Specimen_ID %in% its.lab), ]
its.annot.filter = drop.levels(its.annot.filter) # drop unused, "ghost" levels
its.annot.match <- its.annot.filter[match(its.lab, its.annot.filter$Specimen_ID),]
#Check that labels in alignment and in table annot.match are in the same order
identical(rownames(its), its.annot.match$Specimen_ID)
rownames(its)
#Check that labels in alignment and in table annot.match are in the same order
identical(rownames(its), as.character(its.annot.match$Specimen_ID))
#Replace original tip labels in alignment by the ones needed for publication
rownames(its)<-as.character(its.annot.match$ITS_tip_labels)
rownames(its)
write.nexus.data(its, format = "dna", file= "ITS_ali_perl_Mesquite.nex",
datablock=F, interleaved=F)
write.nexus(tree, file="ITS_MLtree_perl_Mesquite.nex")
library(ggtree)
library(ggrepel)
install.packages("ggrepel")
library(ggrepel)
# Generate treedata object
p0<-ggtree(tree)
library(ggtree)
# Generate treedata object
p0<-ggtree(tree)
p0$data$label <-gsub("_", " ", p0$data$label)
# Adjust alignment labels style:
# Replace all underscores by one blank space
rownames(its) <-gsub("_", " ", rownames(its))
d <- p0$data
d <- d[!d$isTip,]
d$label <- as.numeric(d$label)
d$label <- round(d$label, 2)
d <- d[d$label > 0.63,]
p1 <- p0 +
geom_tree(size=0.9) +
geom_tiplab(size=3.5, align=F, hjust=-0.01)+
geom_label_repel(data=d, aes(label=label), size = 3, nudge_x=-0.01, nudge_y=0.19,
label.r = 0.05, label.padding=0.15)+
geom_treescale(x=0.01, y=25, fontsize=3, linesize=1, width=0.05)
p1
msaplot(p1, its, offset=0.42, width=3, height=0.5)
setwd("~/Projects/subLongSpored/Analyses/v20191011/phylo perl w ali")
install.packages(c("googledrive", "googlesheets"))
library(googledrive)
library(googlesheets)
gd_sub <- gs_title("SUB_data_processing_20190731")
annot.full <- as.data.frame(gs_read(ss=gd_sub, 1))
library(ape)
library(gdata)
library(Hmisc)
library(treeio)
library(ggtree)
library(ggrepel)
# Set the current directory as working directory
set_here()
setwd("~/Projects/subLongSpored/Analyses/v20200321/subLongSpored/phylo_subPerl_with_ali")
annot.full <- read.csv ("SUB_data_processing_20190731.csv",  sep="\t")
#Load tree
tree.unr <- read.newick("perl_its_PhyML_newick_tree.nhx")
#to check the tree struture use
str(tree.unr)
outgroup <- c("Ordynets_00158", "TU_124387",
"TU_124388", "ARAN_4160", "KAS_L_0103")
tree <-root(tree.unr, outgroup)
ml.tip.lab<-tree$tip.label
annot.filter.ml <- annot.full[which(annot.full$Specimen_ID %in% ml.tip.lab), ]
annot.filter.ml <- drop.levels(annot.filter.ml) # drop unused, "ghost" levels
annot.match.ml <- annot.filter.ml[match(ml.tip.lab, annot.filter.ml$Specimen_ID),]
# Check that labels in tree and in table annot.match are
# the same and in the same order
identical(tree$tip.label, as.character(annot.match.ml$Specimen_ID))
tree$tip.label<-as.character(annot.match.ml$ITS_tip_labels)
library(ape)
#its alignment upload
its<-read.dna("perl_ITS_27x_20190725_mafft_ITSx.phy") #import multiple sequence alignment
its.lab<-rownames(its)
its.annot.filter = annot.full[which(annot.full$Specimen_ID %in% its.lab), ]
its.annot.filter = drop.levels(its.annot.filter) # drop unused, "ghost" levels
# Ordering species labels by the order of sequences in alignment/distance matrix
its.annot.match <- its.annot.filter[match(its.lab, its.annot.filter$Specimen_ID),]
#Check that labels in alignment and in table annot.match are in the same order
identical(rownames(its), as.character(its.annot.match$Specimen_ID))
#Replace original tip labels in alignment by the ones needed for publication
rownames(its)<-as.character(its.annot.match$ITS_tip_labels)
write.nexus.data(its, format = "dna", file= "ITS_ali_perl_Mesquite.nex",
datablock=F, interleaved=F)
write.nexus(tree, file="ITS_MLtree_perl_Mesquite.nex")
# Generate treedata object
p0<-ggtree(tree)
p0$data$label <-gsub("_", " ", p0$data$label)
p0$data$label
rownames(its) <-gsub("_", " ", rownames(its))
rownames(its)
d <- p0$data
d <- d[!d$isTip,]
d$label <- as.numeric(d$label)
d$label <- round(d$label, 2)
d <- d[d$label > 0.63,]
d <- p0$data
d <- d[!d$isTip,]
d
d$label <- as.numeric(d$label)
d$label <- round(d$label, 2)
d <- d[d$label > 0.63,]
p1 <- p0 +
geom_tree(size=0.9) +
geom_tiplab(size=3.5, align=F, hjust=-0.01)+
geom_label_repel(data=d, aes(label=label), size = 3, nudge_x=-0.01, nudge_y=0.19,
label.r = 0.05, label.padding=0.15)+
geom_treescale(x=0.01, y=25, fontsize=3, linesize=1, width=0.05)
p1
msaplot(p1, its, offset=0.42, width=3, height=0.5)
p1 <- p0 +
geom_tree(size=0.9) +
geom_tiplab(size=3, align=F, hjust=-0.01)+
geom_label_repel(data=d, aes(label=label), size = 3, nudge_x=-0.01, nudge_y=0.19,
label.r = 0.05, label.padding=0.15)+
geom_treescale(x=0.01, y=25, fontsize=3, linesize=1, width=0.05)
p1
msaplot(p1, its, offset=0.42, width=3, height=0.5)
p1 <- p0 +
geom_tree(size=0.9) +
geom_tiplab(size=2, align=F, hjust=-0.01)+
geom_label_repel(data=d, aes(label=label), size = 3, nudge_x=-0.01, nudge_y=0.19,
label.r = 0.05, label.padding=0.15)+
geom_treescale(x=0.01, y=25, fontsize=3, linesize=1, width=0.05)
p1
msaplot(p1, its, offset=0.42, width=3, height=0.5)
?msaplot
p1 <- p0 +
geom_tree(size=0.9) +
geom_tiplab(size=2, align=F, hjust=-0.01)+
geom_label_repel(data=d, aes(label=label), size = 3, nudge_x=-0.01, nudge_y=0.19,
label.r = 0.05, label.padding=0.15)+
geom_treescale(x=0.01, y=25, fontsize=3, linesize=1, width=0.05)+
theme(legend.position = "none")
p1
msaplot(p1, its, offset=0.42, width=3, height=0.5)
p1 <- p0 +
geom_tree(size=0.9) +
geom_tiplab(size=2, align=F, hjust=-0.01)+
geom_label_repel(data=d, aes(label=label), size = 3, nudge_x=-0.01, nudge_y=0.19,
label.r = 0.05, label.padding=0.15)+
geom_treescale(x=0.01, y=25, fontsize=3, linesize=1, width=0.05)+
p1
msaplot(p1, its, offset=0.42, width=3, height=0.5)
p1 <- p0 +
geom_tree(size=0.9) +
geom_tiplab(size=2, align=F, hjust=-0.01)+
geom_label_repel(data=d, aes(label=label), size = 3, nudge_x=-0.01, nudge_y=0.19,
label.r = 0.05, label.padding=0.15)+
geom_treescale(x=0.01, y=25, fontsize=3, linesize=1, width=0.05)+
p1
p1 <- p0 +
geom_tree(size=0.9) +
geom_tiplab(size=2, align=F, hjust=-0.01)+
geom_label_repel(data=d, aes(label=label), size = 3, nudge_x=-0.01, nudge_y=0.19,
label.r = 0.05, label.padding=0.15)+
geom_treescale(x=0.01, y=25, fontsize=3, linesize=1, width=0.05)
p1
msaplot(p1, its, offset=0.42, width=3, height=0.5)
msaplot
msaplot(p1, its, offset=0.42, width=4, height=0.5)
msaplot(p1, its, offset=0.52, width=3, height=0.5)
d$label <- as.numeric(d$label)
d <- p0$data
d <- d[!d$isTip,]
d$label <- as.numeric(d$label)
d$label
d <- p0$data
d <- d[!d$isTip,]
d
d$label <- round(d$label, 2)
d <- d[d$label > 0.63,]
d$label <- as.numeric(d$label)
# NB! There will be a warning message "NAs introduced by coercion" because
# there were two non-numeric characters in the original tree data, namely
# the word "Root" and one empty value.
# But this does not make a problem for our visualization.
d$label <- round(d$label, 2)
d <- d[d$label > 0.63,]
p1 <- p0 +
geom_tree(size=0.9) +
geom_tiplab(size=2, align=F, hjust=-0.01)+
geom_label_repel(data=d, aes(label=label), size = 3, nudge_x=-0.01, nudge_y=0.19,
label.r = 0.05, label.padding=0.15)+
geom_treescale(x=0.01, y=25, fontsize=3, linesize=1, width=0.05)
p1
msaplot(p1, its, offset=0.52, width=3, height=0.5)
d
d <- p0$data
d <- d[!d$isTip,]
d$label <- as.numeric(d$label)
d$label
# NB! There will be a warning message "NAs introduced by coercion" because
# there were two non-numeric characters in the original tree data, namely
# the word "Root" and one empty value.
# But this does not make a problem for our visualization.
d$label <- round(d$label, 2)
d$label
d <- d[d$label > 0.63,]
d$label
p1 <- p0 +
geom_tree(size=0.9) +
geom_tiplab(size=2, align=F, hjust=-0.01)+
geom_label_repel(data=d, aes(label=label), size = 3, nudge_x=-0.01, nudge_y=0.19,
label.r = 0.05, label.padding=0.15)+
geom_treescale(x=0.01, y=25, fontsize=3, linesize=1, width=0.05)
p1
msaplot(p1, its, offset=0.52, width=3, height=0.5)
msaplot(p1, its, offset=0.52, width=3, height=0.5)
